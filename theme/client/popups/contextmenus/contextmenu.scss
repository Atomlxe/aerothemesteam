@use "shared/extends/contextmenu";
@use "shared/extends/style";

:root {
	--contextmenu_container-spacing: 2px;
	--contextmenu_fg: #000;
	--contextmenu_fg-secondary: #6d6d6d;
	--contextmenu_item-border: rgba(152, 196, 249, 0.75);
	--contextmenu_item-gradient-start: rgba(245, 250, 255, 0.4);
	--contextmenu_item-gradient-end: rgba(215, 232, 255, 0.4);
	--contextmenu_item-gradient: linear-gradient(
		180deg,
		var(--contextmenu_item-gradient-start),
		var(--contextmenu_item-gradient-end)
	);
	--contextmenu_item-inner-border: rgba(243, 248, 254, 0.75);
	--contextmenu_left-spacing: 27px;
	--contextmenu_separator-dark: #e0e0e0;
	--contextmenu_separator-light: #fff;
}

$icons: (
	"Check": "context-menu-checkmark",
	"DialogCheck": "context-menu-checkmark",
	"PlusCircle": "add",
	"Play": "play",
);

#Arrow {
	@include style.arrow("right");

	background-color: var(--contextmenu_fg);

	position: absolute;
	right: 8px;

	svg {
		display: none;
	}
}

#contextMenu {
	@include contextmenu.container;

	// child
	& + & {
		--offset: -3px;

		margin-top: var(--offset);
		margin-left: var(--offset);
	}
}

#contextMenuContents {
	@include contextmenu.container-left-border;

	background-color: transparent;
	padding: 0;

	position: relative;
}

#contextMenuItem {
	@include contextmenu.item;

	line-height: unset;

	@each $class, $icon in $icons {
		&:has(.SVGIcon_#{$class}) {
			--icon: var(--icon-#{$icon});

			svg {
				display: none;
			}
		}
	}

	&:has(.SVGIcon_Check, .SVGIcon_DialogCheck) {
		--offset: -1px;
		--size: 22px;

		&::before {
			position: absolute;
			box-sizing: border-box;
			top: var(--offset);
			left: var(--offset);
			width: var(--size);
			height: var(--size);

			@include contextmenu.item-active;

			background-image: var(--icon), var(--contextmenu_item-gradient);
			background-position: center;
			border-radius: var(--border-radius);
		}
	}

	&#active {
		@include contextmenu.item-active;
	}

	&.disabled {
		--contextmenu_fg: var(--contextmenu_fg-secondary);
		--contextmenu_item-border: rgba(201, 201, 201, 0.75);
		--contextmenu_item-gradient-start: rgba(243, 243, 243, 0.69);
		--contextmenu_item-gradient-end: rgba(221, 223, 223, 0.69);
		--contextmenu_item-gradient: linear-gradient(
			180deg,
			var(--contextmenu_item-gradient-start),
			var(--contextmenu_item-gradient-end)
		);
		--contextmenu_item-inner-border: rgba(235, 235, 235, 0.714);

		--icon-context-menu-checkmark: var(--icon-context-menu-checkmark-disabled);
	}

	&::before {
		content: "";

		@include contextmenu.icon-pos;

		background-image: var(--icon);
	}

	svg:not([class]) {
		@include contextmenu.icon-pos;
	}
}

#ContextMenuPosition {
	margin: 0;

	overflow: visible;
}

#ContextMenuSeparator {
	@include contextmenu.separator;

	// jumplist
	&:last-child {
		display: none;
	}
}
